import bcrypt
import json
import os

# Archivo donde se almacenar√°n los usuarios
USERS_FILE = "usuarios.json"

# Cargar usuarios desde el archivo JSON
def cargar_usuarios():
    if os.path.exists(USERS_FILE):
        with open(USERS_FILE, "r") as file:
            return json.load(file)
    return {}

# Guardar usuarios en el archivo JSON
def guardar_usuarios(usuarios):
    with open(USERS_FILE, "w") as file:
        json.dump(usuarios, file, indent=4)

# Registrar un nuevo usuario
def registrar_usuario():
    usuarios = cargar_usuarios()
    
    3
    
    contrase√±a = input("Ingrese una contrase√±a: ")
    contrase√±a_hash = bcrypt.hashpw(contrase√±a.encode(), bcrypt.gensalt())

    usuarios[usuario] = contrase√±a_hash.decode()
    guardar_usuarios(usuarios)
    print("‚úÖ Usuario registrado exitosamente.")

# Verificar credenciales de inicio de sesi√≥n
def iniciar_sesion():
    usuarios = cargar_usuarios()
    
    usuario = input("Ingrese su nombre de usuario: ")
    if usuario not in usuarios:
        print("‚ùå Usuario no encontrado.")
        return

    contrase√±a = input("Ingrese su contrase√±a: ")
    contrase√±a_hash = usuarios[usuario].encode()
    
    if bcrypt.checkpw(contrase√±a.encode(), contrase√±a_hash):
        print("‚úÖ Inicio de sesi√≥n exitoso.")
    else:
        print("‚ùå Contrase√±a incorrecta.")

# Men√∫ principal
def menu():
    while True:
        print("\n1. Registrar usuario")
        print("2. Iniciar sesi√≥n")
        print("3. Salir")
        opcion = input("Seleccione una opci√≥n: ")

        if opcion == "1":
            registrar_usuario()
        elif opcion == "2":
            iniciar_sesion()
        elif opcion == "3":
            print("üëã Saliendo...")
            break
        else:
            print("‚ö†Ô∏è Opci√≥n no v√°lida. Intente de nuevo.")

if __name__ == "__main__":
    menu()
